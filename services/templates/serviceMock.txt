package services

import (
    "github.com/stretchr/testify/mock"
    "github.com/umirode/go-rest/models"
)

type {{ .Name | ToCamel }}ServiceMock struct {
    mock.Mock
}

func (s *{{ .Name | ToCamel }}ServiceMock) Get{{ .Name | ToCamel }}ByID(id uint) (*models.{{ .Name | ToCamel }}Model, error) {
    args := s.Called(id)

    {{ .Name | ToLowerCamel }}, ok := args.Get(0).(*models.{{ .Name | ToCamel }}Model)
    if ok {
        return {{ .Name | ToLowerCamel }}, nil
    }

    return nil, args.Error(1)
}

func (s *{{ .Name | ToCamel }}ServiceMock) GetAll{{ .Name | ToCamel | Plural }}() (*[]models.{{ .Name | ToCamel }}Model, error) {
    args := s.Called()

    return args.Get(0).(*[]models.{{ .Name | ToCamel }}Model), args.Error(1)
}

func (s *{{ .Name | ToCamel }}ServiceMock) Create{{ .Name | ToCamel }}({{ .Name | ToLowerCamel }} *models.{{ .Name | ToCamel }}Model) error {
    args := s.Called({{ .Name | ToLowerCamel }})

    return args.Error(0)
}

func (s *{{ .Name | ToCamel }}ServiceMock) Update{{ .Name | ToCamel }}(id uint, {{ .Name | ToLowerCamel }} *models.{{ .Name | ToCamel }}Model) error {
    args := s.Called(id, {{ .Name | ToLowerCamel }})

    return args.Error(0)
}

func (s *{{ .Name | ToCamel }}ServiceMock) Delete{{ .Name | ToCamel }}(id uint) error {
    args := s.Called(id)

    return args.Error(0)
}
